{"version":3,"file":"static/js/986.1af16fa7.chunk.js","mappings":"+NACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA4F,6B,6BCOtFA,EAASC,EAAAA,GAAW,CACxBC,MAAOD,EAAAA,KAEJC,MAAM,yCACNC,SAAS,4BACZC,SAAUH,EAAAA,KAAaI,IAAI,GAAGF,aAGnBG,EAAY,WAAO,IAAD,IACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYX,KALtBY,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAeF,OACE,kBACEC,UAAWC,EACXC,SAAUN,GAbG,SAAAO,GACfb,GACEc,EAAAA,EAAAA,IAAM,CACJnB,MAAOkB,EAAKlB,MACZE,SAAUgB,EAAKhB,YAGnBY,GACD,IAMGM,aAAa,MAHf,WAKE,mBAAOL,UAAWC,EAAlB,UAA6B,SAE3B,0BAAOK,KAAK,SAAYX,EAAS,WAChCE,EAAOZ,QAAS,iCAAIY,EAAOZ,aAAX,aAAI,EAAcsB,cAErC,mBAAOP,UAAWC,EAAlB,UAA6B,YAE3B,0BAAOK,KAAK,YAAeX,EAAS,cACnCE,EAAOV,WAAY,iCAAIU,EAAOV,gBAAX,aAAI,EAAiBoB,cAE3C,mBAAQD,KAAK,SAASN,UAAWC,EAAjC,SAAgD,aAKrD,EChDD,EATmB,WACjB,OACE,iCACE,wBAAI,qCACJ,SAACZ,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"submitBtn\":\"LoginForm_submitBtn__O3h3k\"};","import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.object({\n  email: yup\n    .string()\n    .email('You must provide a valid email adress')\n    .required('Email adress is required'),\n  password: yup.string().min(7).required(),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    dispatch(\n      logIn({\n        email: data.email,\n        password: data.password,\n      })\n    );\n    reset();\n  };\n\n  return (\n    <form\n      className={css.form}\n      onSubmit={handleSubmit(onSubmit)}\n      autoComplete=\"off\"\n    >\n      <label className={css.label}>\n        Email\n        <input type=\"email\" {...register('email')} />\n        {errors.email && <p>{errors.email?.message}</p>}\n      </label>\n      <label className={css.label}>\n        Password\n        <input type=\"password\" {...register('password')} />\n        {errors.password && <p>{errors.password?.message}</p>}\n      </label>\n      <button type=\"submit\" className={css.submitBtn}>\n        Log In\n      </button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\n const LogInPage = () => {\n  return (\n    <>\n      <h1>Please, login into your accaunt</h1>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LogInPage"],"names":["schema","yup","email","required","password","min","LoginForm","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","className","css","onSubmit","data","logIn","autoComplete","type","message"],"sourceRoot":""}